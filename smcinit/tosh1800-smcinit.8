.TH TOSH1800-SMCINIT "8" "July 2003" "0.3" "Linux IrDA"
.SH NAME
tosh1800-smcinit \- initialize the IrDA controler on Toshiba laptops
.SH SYNOPSIS
.B tosh1800-smcinit 
[\fIOPTION\fR]
.SH DESCRIPTION
IrDA configurator for laptops with ALI1533 bridge (LPC47N227 SuperIO), smc-ircc
and not initializing BIOS (tested on Toshiba Satellite 1800-514, 
Toshiba Satellite 5100 and Toshiba Tecra 9100) to be
used with Linux kernel.
.PP
Toshiba Satellite 1800 laptops are provided with a SMCS LPC47N227 SuperIO chip which is IrDA SIR/FIR capable. 
The chip is connected through an ALI1533 PCI-ISA bridge. 
The IrDA subsystem of the SuperIO chip is supported by the \fBsmc-ircc\fR Linux kernel module. 
Unfortunately the BIOS neither configurates the SuperIO chip IrDA subsystem (SIR port, FIR port, 
dma, irq, IrDA mode, power) nor sets the PCI-ISA bridge to decode any usable port.
Linux kernel is thus prevented to detect the second UART making impossible to use it 
in SIR mode. For the same reason, the FIR mode \fBsmc-ircc\fR is able to detect the SuperIO 
chip but, once found the IrDA subsystem unconfigured, fails to install.
.PP
\fBtosh1800-smcinit\fR sets SIR and FIR ioport addresses, DMA and IRQ of the SuperIO chip IrDA subsystem 
then powers on the second UART. It also configures the PCI-ISA bridge to decode SIR and FIR ports. 
All this configuration work should be rather done into the kernel but it was more practical and safe to make a 
small testing tool of it. It can be probably extended to include configuration kludges for other similar 
SuperIO and ISA bridge combination.
.PP
Testing was carried on a Toshiba Satellite 1800-514 with Linux kernel 2.4.17.
I hope this work could be helpful, it was quite funny to do it however.
.SH OPTIONS
.TP
\fB-a\fR, \fB--skip-decoding-cfg\fR
Skip ISA bridge decoding configuration.
.TP 
\fB-b\fR, \fB--skip-smc-ircc-cfg\fR
Skip SMC-IRCC configuration.
.TP
\fB-v\fR, \fB--vendor\fR=\fIVALUE\fR
Look for the specified ISA bridge PCI vendor ID
.TP
\fB-x\fR, \fB--device\fR=\fIVALUE\fR
Look for the specified ISA bridge PCI device ID
.TP
\fB-c\fR, \fB--cfgbase\fR=\fIVALUE\fR
Set SMC-IRCC IO cfgbase address. Usual value can be 0x2e. 
.TP
\fB-s\fR, \fB--sirbase\fR=\fIVALUE\fR
Set SMC-IRCC IO sirbase address. Usual value can be 0x2e8.
.TP
\fB-f\fR, \fB--firbase\fR=\fIVALUE\fR
Set SMC-IRCC IO firbase address. Usual value can be 0x2f8.
.TP
\fB-m\fR, \fB--dma\fR=\fIVALUE\fR
Set SMC-IRCC DMA channel. Usual value can be 3.
.TP
\fB-i\fR, \fB--irq\fR=\fIVALUE\fR
Set SMC-IRCC IRQ. Usual value can be 7.
.TP
\fB-p\fR, \fB--print\fR
Print ISA bridge configuration.
.TP
\fB-V\fR, \fB--version\fR
Show program version.
.TP
\fB-h\fR, \fB--help\fR
Show program options.
.SH AUTHOR
This program was made by Daniele Peri <peri@csai.unipa.it>
.SH CREDITS
SMSC for the downloadable datasheets
.PP
Paul Hampson for its Linux IrDA mailing list messages.
.PP 
Manual page written by Claudiu Costin <claudiuc@kde.org>. Documentation
based on original README by Daniele Peri.
.SH "SEE ALSO"
.BR irattach (1),
.br
.BR irdadump (1),
.br
.BR http://lancelot.csai.unipa.it/~peri/ " Daniele Peri's home page,"
.br
.BR http://irda.sourceforge.net/smcinit/ " the SMCINIT package home page." 

